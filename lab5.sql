-- Hayden Hoopes
-- Lab 5

-- Problem 1
SELECT DRIVER_ID
    , COUNT(DISTINCT CAR_ID) CARS
FROM INSTANTRIDE.TRAVELS
GROUP BY DRIVER_ID
ORDER BY CARS DESC
;

-- Problem 2
SELECT DRIVER_ID
    , COUNT(DISTINCT CAR_ID) CARS
FROM INSTANTRIDE.TRAVELS
GROUP BY DRIVER_ID
HAVING COUNT(DISTINCT CAR_ID) > 1
ORDER BY NUMBEROFCARSDRIVENMORETHANONCE
    ;
    
-- Problem 3
SELECT *
FROM INSTANTRIDE.TRAVELS
WHERE TRAVEL_DISCOUNT >
    (
        SELECT AVG(TRAVEL_DISCOUNT)
        FROM INSTANTRIDE.TRAVELS
    )
;

-- Problem 4
SELECT CAR_ID, COUNT(*) Usages
FROM INSTANTRIDE.TRAVELS
GROUP BY CAR_ID
HAVING COUNT(*) >
    (
        SELECT AVG(NUM_TRAVELS)
        FROM
            (
                SELECT CAR_ID, COUNT(*) NUM_TRAVELS
                FROM INSTANTRIDE.TRAVELS
                GROUP BY CAR_ID
            )
    )
;

-- Problem 5
SELECT AVG(NUM_TRAVELS) AVERAGE
    , MAX(NUM_TRAVELS) MAXIMUM
    , SUM(NUM_TRAVELS) TOTAL
FROM
    (
        SELECT USER_ID, COUNT(TRAVEL_ID) NUM_TRAVELS
        FROM INSTANTRIDE.TRAVELS
        GROUP BY USER_ID
    )
;

-- Problem 6
SELECT DISTINCT USER_FIRST_NAME FIRST_NAME
    , USER_LAST_NAME LAST_NAME
FROM INSTANTRIDE.USERS
UNION ALL
SELECT DRIVER_FIRST_NAME
    , DRIVER_LAST_NAME
FROM INSTANTRIDE.DRIVERS
;